{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["const cohortId = \"wff-cohort-37\";\r\nconst token = \"fde443f4-e1c0-4be8-9027-f230183aa3f5\";\r\nconst baseUrl = `https://nomoreparties.co/v1/${cohortId}`;\r\n\r\nfunction request(path, method = \"GET\", body = null) {\r\n  const headers = {\r\n    authorization: token,\r\n    \"Content-Type\": \"application/json\",\r\n  };\r\n\r\n  const options = {\r\n    method,\r\n    headers,\r\n    ...(body && { body: JSON.stringify(body) }),\r\n  };\r\n\r\n  return fetch(`${baseUrl}/${path}`, options).then((res) => {\r\n    if (!res.ok) {\r\n      return res.json().then((err) => {\r\n        const error = new Error(`Ошибка ${res.status}`);\r\n        error.details = err;\r\n        throw error;\r\n      });\r\n    }\r\n    return res.json();\r\n  });\r\n}\r\n\r\nexport function getUserInfo() {\r\n  return request(\"users/me\");\r\n}\r\n\r\nexport function getCards() {\r\n  return request(\"cards\");\r\n}\r\n\r\nexport function addCard(name, link) {\r\n  return request(\"cards\", \"POST\", { name, link });\r\n}\r\n\r\nexport function deleteCard(cardId) {\r\n  return request(`cards/${cardId}`, \"DELETE\");\r\n}\r\n\r\nexport function likeCard(cardId) {\r\n  return request(`cards/likes/${cardId}`, \"PUT\");\r\n}\r\n\r\nexport function unlikeCard(cardId) {\r\n  return request(`cards/likes/${cardId}`, \"DELETE\");\r\n}\r\n\r\nexport function updateUserInfo(name, about) {\r\n  return request(\"users/me\", \"PATCH\", { name, about });\r\n}\r\n\r\nexport function updateUserAvatar(avatarLink) {\r\n  return request(\"users/me/avatar\", \"PATCH\", { avatar: avatarLink });\r\n}\r\n\r\nexport function loadUserDataAndCards() {\r\n  return Promise.all([getUserInfo(), getCards()]).then(([userInfo, cards]) => {\r\n    return { userInfo, cards };\r\n  });\r\n}\r\n","import * as api from \"./api\";\r\n\r\nexport function createCard(\r\n  data,\r\n  handleLike,\r\n  handleDelete,\r\n  handleImageClick,\r\n  userId\r\n) {\r\n  const cardTemplate = document.getElementById(\"card-template\").content;\r\n  const cardElement = cardTemplate\r\n    .querySelector(\".places__item\")\r\n    .cloneNode(true);\r\n  const imgElement = cardElement.querySelector(\".card__image\");\r\n  const titleElement = cardElement.querySelector(\".card__title\");\r\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\r\n  const likeElement = cardElement.querySelector(\".card__like-button\");\r\n  const likeCount = cardElement.querySelector(\".like-count-text\");\r\n\r\n  likeCount.textContent = data.likes.length;\r\n\r\n  imgElement.src = data.link;\r\n  imgElement.alt = data.name;\r\n  titleElement.textContent = data.name;\r\n  cardElement.dataset.id = data._id;\r\n\r\n  if (data.likes.some((like) => like._id === userId)) {\r\n    likeElement.classList.add(\"card__like-button_is-active\");\r\n  }\r\n\r\n  if (data.owner._id !== userId) {\r\n    deleteButton.style.display = \"none\";\r\n  } else {\r\n    deleteButton.style.display = \"block\";\r\n  }\r\n\r\n  imgElement.addEventListener(\"click\", () =>\r\n    handleImageClick(data.link, data.name)\r\n  );\r\n\r\n  deleteButton.addEventListener(\"click\", () => {\r\n    handleDelete(cardElement);\r\n  });\r\n\r\n  likeElement.addEventListener(\"click\", (event) =>\r\n    handleLike(event, likeCount, data.likes.length)\r\n  );\r\n\r\n  return cardElement;\r\n}\r\n\r\nexport function handleLikeButtonClick(event, likeCount) {\r\n  const cardId = event.target.closest(\".places__item\").dataset.id;\r\n  const isLiked = event.target.classList.contains(\r\n    \"card__like-button_is-active\"\r\n  );\r\n\r\n  if (isLiked) {\r\n    api\r\n      .unlikeCard(cardId)\r\n      .then((updatedCard) => {\r\n        event.target.classList.remove(\"card__like-button_is-active\");\r\n        likeCount.textContent = updatedCard.likes.length;\r\n      })\r\n      .catch((err) => console.error(\"Ошибка при удалении лайка:\", err));\r\n  } else {\r\n    api\r\n      .likeCard(cardId)\r\n      .then((updatedCard) => {\r\n        event.target.classList.add(\"card__like-button_is-active\");\r\n        likeCount.textContent = updatedCard.likes.length;\r\n      })\r\n      .catch((err) => console.error(\"Ошибка при добавлении лайка:\", err));\r\n  }\r\n}\r\n","export function openModal(modal) {\r\n  modal.classList.add(\"popup_is-opened\");\r\n  document.addEventListener(\"keydown\", handleEscapeKey);\r\n}\r\n\r\nexport function closeModal(modal) {\r\n  modal.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keydown\", handleEscapeKey);\r\n}\r\n\r\nfunction handleEscapeKey(event) {\r\n  if (event.key === \"Escape\") {\r\n    const openPopups = document.querySelectorAll(\".popup_is-opened\");\r\n    openPopups.forEach((popup) => closeModal(popup));\r\n  }\r\n}\r\n\r\nexport function handleModalClose(event) {\r\n  const popup = event.target.closest(\".popup\");\r\n  if (\r\n    popup &&\r\n    (event.target.classList.contains(\"popup__close\") || event.target === popup)\r\n  ) {\r\n    closeModal(popup);\r\n  }\r\n}\r\n","function toggleInputError(formElement, inputElement, errorMessage = \"\") {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  \r\n  if (errorMessage) {\r\n    inputElement.classList.add(validationConfig.inputErrorClass);\r\n    errorElement.textContent = errorMessage;\r\n    errorElement.classList.add(validationConfig.errorClass);\r\n  } else {\r\n    inputElement.classList.remove(validationConfig.inputErrorClass);\r\n    errorElement.classList.remove(validationConfig.errorClass);\r\n    errorElement.textContent = \"\";\r\n  }\r\n}\r\n\r\nexport function showInputError(formElement, inputElement, errorMessage) {\r\n  toggleInputError(formElement, inputElement, errorMessage);\r\n}\r\n\r\nexport function hideInputError(formElement, inputElement) {\r\n  toggleInputError(formElement, inputElement);\r\n}\r\n\r\nfunction hasInvalidInput(inputList) {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n}\r\n\r\nexport function toggleButtonState(inputList, buttonElement) {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.classList.add(\"button_inactive\");\r\n    buttonElement.setAttribute(\"disabled\", true);\r\n  } else {\r\n    buttonElement.classList.remove(\"button_inactive\");\r\n    buttonElement.removeAttribute(\"disabled\");\r\n  }\r\n}\r\n\r\nexport function clearValidation(formElement, validationConfig) {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(validationConfig.inputSelector)\r\n  );\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement);\r\n  });\r\n}\r\n\r\nfunction checkInputValidity(formElement, inputElement) {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n\r\n  const isValid =\r\n    inputElement.validity.valid &&\r\n    (!inputElement.pattern ||\r\n      new RegExp(inputElement.pattern).test(inputElement.value));\r\n\r\n  if (!isValid) {\r\n    const errorMessage =\r\n      inputElement.validationMessage || inputElement.dataset.errorMessage;\r\n    showInputError(formElement, inputElement, errorMessage);\r\n  } else {\r\n    hideInputError(formElement, inputElement);\r\n  }\r\n}\r\n\r\nfunction setEventListeners(formElement) {\r\n  const inputList = Array.from(formElement.querySelectorAll(\".popup__input\"));\r\n  const buttonElement = formElement.querySelector(\".popup__button\");\r\n  toggleButtonState(inputList, buttonElement);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener(\"input\", function () {\r\n      checkInputValidity(formElement, inputElement);\r\n      toggleButtonState(inputList, buttonElement);\r\n    });\r\n  });\r\n}\r\n\r\nexport function enableValidation() {\r\n  const formList = Array.from(document.querySelectorAll(\".popup__form\"));\r\n  formList.forEach((formElement) => {\r\n    setEventListeners(formElement);\r\n  });\r\n}\r\n\r\nexport const validationConfig = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"popup__button_disabled\",\r\n  inputErrorClass: \"popup__input_type_error\",\r\n  errorClass: \"form__input-error_active\",\r\n};\r\n","import \"../pages/index.css\";\r\nimport { createCard, handleLikeButtonClick } from \"../components/card\";\r\nimport { openModal, closeModal, handleModalClose } from \"../components/modal\";\r\nimport { enableValidation, clearValidation, validationConfig } from \"../components/validation\";\r\nimport * as api from \"../components/api.js\";\r\n\r\nconst placesContainer = document.querySelector(\".places__list\");\r\nconst addCardPopup = document.querySelector(\".popup_type_new-card\");\r\nconst editPopup = document.querySelector(\".popup_type_edit\");\r\nconst changeAvatarPopup = document.querySelector(\".popup_type_avatar\");\r\nconst cardPopup = document.querySelector(\".popup_type_image\");\r\nconst confirmDeleteCardPopup = document.querySelector(\r\n  \".popup_type_delete-card\"\r\n);\r\nconst popupImage = cardPopup.querySelector(\".popup__image\");\r\nconst popupCaption = cardPopup.querySelector(\".popup__caption\");\r\nconst modals = document.querySelectorAll(\".popup\");\r\n\r\nconst addButton = document.querySelector(\".profile__add-button\");\r\nconst editButton = document.querySelector(\".profile__edit-button\");\r\nconst formEditButton = editPopup.querySelector(\".popup__button\");\r\nconst avatar = document.querySelector(\".profile__image\");\r\nconst changeAvatarButton = changeAvatarPopup.querySelector(\".popup__button\");\r\nconst createCardButton = addCardPopup.querySelector(\".popup__button\");\r\nconst confirmDeleteButton =\r\n  confirmDeleteCardPopup.querySelector(\".popup__button\");\r\n\r\nconst changeAvatarForm = document.forms[\"avatar\"];\r\nconst avatarLinkInput = changeAvatarForm.elements[\"avatar-link\"];\r\nconst editProfileForm = document.forms[\"edit-profile\"];\r\nconst newPlaceForm = document.forms[\"new-place\"];\r\nconst confirmDeleteForm = document.forms[\"delete-form\"];\r\nconst placeNameInput = newPlaceForm.elements[\"place-name\"];\r\nconst linkInput = newPlaceForm.elements[\"link\"];\r\nconst nameInput = editProfileForm.elements[\"name\"];\r\nconst descriptionInput = editProfileForm.elements[\"about\"];\r\n\r\nconst profileTitle = document.querySelector(\".profile__title\");\r\nconst profileDescription = document.querySelector(\".profile__description\");\r\nlet cardElementToDelete;\r\n\r\nconfirmDeleteForm.addEventListener(\"submit\", (event) => {\r\n  event.preventDefault();\r\n  if (cardElementToDelete) {\r\n    confirmDeleteButton.textContent = \"Удаляем...\";\r\n    const cardId = cardElementToDelete.dataset.id;\r\n    api\r\n      .deleteCard(cardId)\r\n      .then(() => {\r\n        cardElementToDelete.remove();\r\n        cardElementToDelete = null;\r\n        confirmDeleteCardPopup.classList.remove(\"popup_is-opened\");\r\n      })\r\n      .catch((err) => console.error(\"Ошибка при удалении карточки:\", err))\r\n      .finally(() => {\r\n        confirmDeleteButton.textContent = \"Да\";\r\n      });\r\n  }\r\n});\r\n\r\nfunction handleDelete(cardElement) {\r\n  cardElementToDelete = cardElement;\r\n  openModal(confirmDeleteCardPopup);\r\n}\r\n\r\napi\r\n  .loadUserDataAndCards()\r\n  .then(({ userInfo, cards }) => {\r\n    avatar.style.backgroundImage = `url(${userInfo.avatar})`;\r\n\r\n    updateProfile({ name: userInfo.name, about: userInfo.about });\r\n\r\n    cards.forEach((card) => {\r\n      const cardElement = createCard(\r\n        card,\r\n        handleLikeButtonClick,\r\n        handleDelete,\r\n        createCardPopup,\r\n        userInfo._id\r\n      );\r\n      renderCard(cardElement);\r\n    });\r\n  })\r\n  .catch((err) => {\r\n    console.error(\"Ошибка при загрузке карточек:\", err);\r\n  });\r\n\r\nchangeAvatarForm.addEventListener(\"submit\", (event) => {\r\n  event.preventDefault();\r\n  changeAvatarButton.textContent = \"Сохраняем...\";\r\n  const newAvatarLink = avatarLinkInput.value;\r\n  api\r\n    .updateUserAvatar(newAvatarLink)\r\n    .then(() => {\r\n      avatar.style.backgroundImage = `url(${newAvatarLink})`;\r\n      closeModal(changeAvatarPopup);\r\n    })\r\n    .catch((err) => {\r\n      console.error(\"Ошибка при обновлении аватара:\", err);\r\n    })\r\n    .finally(() => {\r\n      changeAvatarButton.textContent = \"Сохранить\";\r\n    });\r\n});\r\n\r\navatar.addEventListener(\"click\", () => {\r\n  avatarLinkInput.value = \"\";\r\n  clearValidation(changeAvatarForm, validationConfig);\r\n  openModal(changeAvatarPopup);\r\n});\r\n\r\nenableValidation(validationConfig);\r\n\r\nmodals.forEach((modal) => {\r\n  modal.classList.add(\"popup_is-animated\");\r\n  modal.addEventListener(\"click\", handleModalClose);\r\n});\r\n\r\nfunction createCardPopup(imageSrc, title) {\r\n  popupImage.src = imageSrc;\r\n  popupImage.alt = title;\r\n  popupCaption.textContent = title;\r\n  openModal(cardPopup);\r\n}\r\n\r\nfunction renderCard(cardElement) {\r\n  placesContainer.appendChild(cardElement);\r\n}\r\n\r\naddButton.addEventListener(\"click\", () => {\r\n  newPlaceForm.reset();\r\n  clearValidation(newPlaceForm, validationConfig);\r\n  openModal(addCardPopup);\r\n});\r\n\r\nnewPlaceForm.addEventListener(\"submit\", (event) => {\r\n  event.preventDefault();\r\n  createCardButton.textContent = \"Сохраняем...\";\r\n  const newCard = {\r\n    name: placeNameInput.value,\r\n    link: linkInput.value,\r\n  };\r\n\r\n  api\r\n    .addCard(newCard.name, newCard.link)\r\n    .then((card) => {\r\n      const cardElement = createCard(\r\n        card,\r\n        handleLikeButtonClick,\r\n        handleDelete,\r\n        createCardPopup,\r\n        card.owner._id\r\n      );\r\n      placesContainer.prepend(cardElement);\r\n      closeModal(addCardPopup);\r\n      newPlaceForm.reset();\r\n    })\r\n    .catch((err) => {\r\n      console.error(\"Ошибка при добавлении карточки:\", err);\r\n    })\r\n    .finally(() => {\r\n      createCardButton.textContent = \"Сохранить\";\r\n    });\r\n});\r\n\r\neditButton.addEventListener(\"click\", () => {\r\n  nameInput.value = profileTitle.textContent;\r\n  descriptionInput.value = profileDescription.textContent;\r\n  clearValidation(editProfileForm, validationConfig);\r\n  openModal(editPopup);\r\n});\r\n\r\nfunction updateProfile({ name, about }) {\r\n  profileTitle.textContent = name;\r\n  profileDescription.textContent = about;\r\n}\r\n\r\neditProfileForm.addEventListener(\"submit\", (event) => {\r\n  event.preventDefault();\r\n  formEditButton.textContent = \"Сохраняем...\";\r\n\r\n  const updatedProfile = {\r\n    name: nameInput.value,\r\n    about: descriptionInput.value,\r\n  };\r\n\r\n  api\r\n    .updateUserInfo(updatedProfile.name, updatedProfile.about)\r\n    .then(() => {\r\n      updateProfile(updatedProfile);\r\n      closeModal(editPopup);\r\n      editProfileForm.reset();\r\n    })\r\n    .catch((err) => {\r\n      console.error(\"Ошибка при обновлении профиля:\", err);\r\n    })\r\n    .finally(() => {\r\n      formEditButton.textContent = \"Сохранить\";\r\n    });\r\n});\r\n"],"names":["baseUrl","concat","request","path","body","arguments","length","undefined","options","_objectSpread","method","headers","authorization","JSON","stringify","fetch","then","res","ok","json","err","error","Error","status","details","createCard","data","handleLike","handleDelete","handleImageClick","userId","cardElement","document","getElementById","content","querySelector","cloneNode","imgElement","titleElement","deleteButton","likeElement","likeCount","textContent","likes","src","link","alt","name","dataset","id","_id","some","like","classList","add","owner","style","display","addEventListener","event","handleLikeButtonClick","cardId","target","closest","contains","api","updatedCard","remove","catch","console","openModal","modal","handleEscapeKey","closeModal","removeEventListener","key","querySelectorAll","forEach","popup","handleModalClose","toggleInputError","formElement","inputElement","errorMessage","errorElement","validationConfig","inputErrorClass","errorClass","hideInputError","toggleButtonState","inputList","buttonElement","validity","valid","hasInvalidInput","removeAttribute","setAttribute","clearValidation","Array","from","inputSelector","cardElementToDelete","formSelector","submitButtonSelector","inactiveButtonClass","placesContainer","addCardPopup","editPopup","changeAvatarPopup","cardPopup","confirmDeleteCardPopup","popupImage","popupCaption","modals","addButton","editButton","formEditButton","avatar","changeAvatarButton","createCardButton","confirmDeleteButton","changeAvatarForm","forms","avatarLinkInput","elements","editProfileForm","newPlaceForm","confirmDeleteForm","placeNameInput","linkInput","nameInput","descriptionInput","profileTitle","profileDescription","createCardPopup","imageSrc","title","updateProfile","_ref2","about","preventDefault","finally","Promise","all","_ref","userInfo","cards","backgroundImage","card","appendChild","avatarLink","newAvatarLink","value","patternMismatch","setCustomValidity","pattern","RegExp","test","showInputError","validationMessage","checkInputValidity","setEventListeners","reset","newCard","prepend","updatedProfile"],"sourceRoot":""}