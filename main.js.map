{"version":3,"file":"main.js","mappings":"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","sources":["webpack://mesto-project-ff/./src/components/api.js","webpack://mesto-project-ff/./src/components/card.js","webpack://mesto-project-ff/./src/components/modal.js","webpack://mesto-project-ff/./src/components/validation.js","webpack://mesto-project-ff/./src/scripts/index.js"],"sourcesContent":["const cohortId = \"wff-cohort-37\";\r\nconst token = \"fde443f4-e1c0-4be8-9027-f230183aa3f5\";\r\nconst baseUrl = `https://nomoreparties.co/v1/${cohortId}`;\r\n\r\nfunction request(path, method = \"GET\", body = null) {\r\n  const headers = {\r\n    authorization: token,\r\n    \"Content-Type\": \"application/json\",\r\n  };\r\n\r\n  const options = {\r\n    method,\r\n    headers,\r\n    ...(body && { body: JSON.stringify(body) }),\r\n  };\r\n\r\n  return fetch(`${baseUrl}/${path}`, options).then((res) => {\r\n    if (!res.ok) {\r\n      return res.json().then((err) => {\r\n        const error = new Error(`Ошибка ${res.status}`);\r\n        error.details = err;\r\n        throw error;\r\n      });\r\n    }\r\n    return res.json();\r\n  });\r\n}\r\n\r\nexport function getUserInfo() {\r\n  return request(\"users/me\");\r\n}\r\n\r\nexport function getCards() {\r\n  return request(\"cards\");\r\n}\r\n\r\nexport function addCard(name, link) {\r\n  return request(\"cards\", \"POST\", { name, link });\r\n}\r\n\r\nexport function deleteCard(cardId) {\r\n  return request(`cards/${cardId}`, \"DELETE\");\r\n}\r\n\r\nexport function likeCard(cardId) {\r\n  return request(`cards/likes/${cardId}`, \"PUT\");\r\n}\r\n\r\nexport function unlikeCard(cardId) {\r\n  return request(`cards/likes/${cardId}`, \"DELETE\");\r\n}\r\n\r\nexport function updateUserInfo(name, about) {\r\n  return request(\"users/me\", \"PATCH\", { name, about });\r\n}\r\n\r\nexport function updateUserAvatar(avatarLink) {\r\n  return request(\"users/me/avatar\", \"PATCH\", { avatar: avatarLink });\r\n}\r\n\r\nexport function loadUserDataAndCards() {\r\n  return Promise.all([getUserInfo(), getCards()]).then(([userInfo, cards]) => {\r\n    return { userInfo, cards };\r\n  });\r\n}\r\n","import * as api from \"./api\";\r\n\r\nexport function createCard(\r\n  data,\r\n  handleLike,\r\n  handleDelete,\r\n  handleImageClick,\r\n  userId\r\n) {\r\n  const cardTemplate = document.getElementById(\"card-template\").content;\r\n  const cardElement = cardTemplate\r\n    .querySelector(\".places__item\")\r\n    .cloneNode(true);\r\n  const imgElement = cardElement.querySelector(\".card__image\");\r\n  const titleElement = cardElement.querySelector(\".card__title\");\r\n  const deleteButton = cardElement.querySelector(\".card__delete-button\");\r\n  const likeElement = cardElement.querySelector(\".card__like-button\");\r\n  const likeCount = cardElement.querySelector(\".like-count-text\");\r\n\r\n  likeCount.textContent = data.likes.length;\r\n\r\n  imgElement.src = data.link;\r\n  imgElement.alt = data.name;\r\n  titleElement.textContent = data.name;\r\n  cardElement.dataset.id = data._id;\r\n\r\n  if (data.likes.some((like) => like._id === userId)) {\r\n    likeElement.classList.add(\"card__like-button_is-active\");\r\n  }\r\n\r\n  if (data.owner._id !== userId) {\r\n    deleteButton.style.display = \"none\";\r\n  } else {\r\n    deleteButton.style.display = \"block\";\r\n  }\r\n\r\n  imgElement.addEventListener(\"click\", () =>\r\n    handleImageClick(data.link, data.name)\r\n  );\r\n\r\n  deleteButton.addEventListener(\"click\", () => {\r\n    handleDelete(cardElement);\r\n  });\r\n\r\n  likeElement.addEventListener(\"click\", (event) =>\r\n    handleLike(event, likeCount, data.likes.length)\r\n  );\r\n\r\n  return cardElement;\r\n}\r\n\r\nexport function handleLikeButtonClick(event, likeCount) {\r\n  const cardId = event.target.closest(\".places__item\").dataset.id;\r\n  const isLiked = event.target.classList.contains(\r\n    \"card__like-button_is-active\"\r\n  );\r\n\r\n  if (isLiked) {\r\n    api\r\n      .unlikeCard(cardId)\r\n      .then((updatedCard) => {\r\n        event.target.classList.remove(\"card__like-button_is-active\");\r\n        likeCount.textContent = updatedCard.likes.length;\r\n      })\r\n      .catch((err) => console.error(\"Ошибка при удалении лайка:\", err));\r\n  } else {\r\n    api\r\n      .likeCard(cardId)\r\n      .then((updatedCard) => {\r\n        event.target.classList.add(\"card__like-button_is-active\");\r\n        likeCount.textContent = updatedCard.likes.length;\r\n      })\r\n      .catch((err) => console.error(\"Ошибка при добавлении лайка:\", err));\r\n  }\r\n}","export function openModal(modal) {\r\n  modal.classList.add(\"popup_is-opened\");\r\n  document.addEventListener(\"keydown\", handleEscapeKey);\r\n}\r\n\r\nexport function closeModal(modal) {\r\n  modal.classList.remove(\"popup_is-opened\");\r\n  document.removeEventListener(\"keydown\", handleEscapeKey);\r\n}\r\n\r\nfunction handleEscapeKey(event) {\r\n  if (event.key === \"Escape\") {\r\n    const openPopups = document.querySelectorAll(\".popup_is-opened\");\r\n    openPopups.forEach((popup) => closeModal(popup));\r\n  }\r\n}\r\n\r\nexport function handleModalClose(event) {\r\n  const popup = event.target.closest(\".popup\");\r\n  if (\r\n    popup &&\r\n    (event.target.classList.contains(\"popup__close\") || event.target === popup)\r\n  ) {\r\n    closeModal(popup);\r\n  }\r\n}\r\n","function toggleInputError(formElement, inputElement, errorMessage = \"\") {\r\n  const errorElement = formElement.querySelector(`.${inputElement.id}-error`);\r\n  \r\n  if (errorMessage) {\r\n    inputElement.classList.add(validationConfig.inputErrorClass);\r\n    errorElement.textContent = errorMessage;\r\n    errorElement.classList.add(validationConfig.errorClass);\r\n  } else {\r\n    inputElement.classList.remove(validationConfig.inputErrorClass);\r\n    errorElement.classList.remove(validationConfig.errorClass);\r\n    errorElement.textContent = \"\";\r\n  }\r\n}\r\n\r\nexport function showInputError(formElement, inputElement, errorMessage) {\r\n  toggleInputError(formElement, inputElement, errorMessage);\r\n}\r\n\r\nexport function hideInputError(formElement, inputElement) {\r\n  toggleInputError(formElement, inputElement);\r\n}\r\n\r\nfunction hasInvalidInput(inputList) {\r\n  return inputList.some((inputElement) => {\r\n    return !inputElement.validity.valid;\r\n  });\r\n}\r\n\r\nexport function toggleButtonState(inputList, buttonElement) {\r\n  if (hasInvalidInput(inputList)) {\r\n    buttonElement.classList.add(validationConfig.inactiveButtonClass);\r\n    buttonElement.setAttribute(\"disabled\", true);\r\n  } else {\r\n    buttonElement.classList.remove(validationConfig.inactiveButtonClass);\r\n    buttonElement.removeAttribute(\"disabled\");\r\n  }\r\n}\r\n\r\nexport function clearValidation(formElement, validationConfig) {\r\n  const inputList = Array.from(\r\n    formElement.querySelectorAll(validationConfig.inputSelector)\r\n  );\r\n  inputList.forEach((inputElement) => {\r\n    hideInputError(formElement, inputElement);\r\n  });\r\n}\r\n\r\nfunction checkInputValidity(formElement, inputElement) {\r\n  if (inputElement.validity.patternMismatch) {\r\n    inputElement.setCustomValidity(inputElement.dataset.errorMessage);\r\n  } else {\r\n    inputElement.setCustomValidity(\"\");\r\n  }\r\n\r\n  const isValid =\r\n    inputElement.validity.valid &&\r\n    (!inputElement.pattern ||\r\n      new RegExp(inputElement.pattern).test(inputElement.value));\r\n\r\n  if (!isValid) {\r\n    const errorMessage =\r\n      inputElement.validationMessage || inputElement.dataset.errorMessage;\r\n    showInputError(formElement, inputElement, errorMessage);\r\n  } else {\r\n    hideInputError(formElement, inputElement);\r\n  }\r\n}\r\n\r\nfunction setEventListeners(formElement) {\r\n  const inputList = Array.from(formElement.querySelectorAll(validationConfig.inputSelector));\r\n  const buttonElement = formElement.querySelector(validationConfig.submitButtonSelector);\r\n  toggleButtonState(inputList, buttonElement);\r\n\r\n  inputList.forEach((inputElement) => {\r\n    inputElement.addEventListener(\"input\", function () {\r\n      checkInputValidity(formElement, inputElement);\r\n      toggleButtonState(inputList, buttonElement);\r\n    });\r\n  });\r\n}\r\n\r\nexport function enableValidation() {\r\n  const formList = Array.from(document.querySelectorAll(validationConfig.formSelector));\r\n  formList.forEach((formElement) => {\r\n    setEventListeners(formElement);\r\n  });\r\n}","import \"../pages/index.css\";\r\nimport { createCard, handleLikeButtonClick } from \"../components/card\";\r\nimport { openModal, closeModal, handleModalClose } from \"../components/modal\";\r\nimport { enableValidation, clearValidation } from \"../components/validation\";\r\nimport * as api from \"../components/api.js\";\r\n\r\nconst placesContainer = document.querySelector(\".places__list\");\r\nconst addCardPopup = document.querySelector(\".popup_type_new-card\");\r\nconst editPopup = document.querySelector(\".popup_type_edit\");\r\nconst changeAvatarPopup = document.querySelector(\".popup_type_avatar\");\r\nconst cardPopup = document.querySelector(\".popup_type_image\");\r\nconst confirmDeleteCardPopup = document.querySelector(\r\n  \".popup_type_delete-card\"\r\n);\r\nconst popupImage = cardPopup.querySelector(\".popup__image\");\r\nconst popupCaption = cardPopup.querySelector(\".popup__caption\");\r\nconst modals = document.querySelectorAll(\".popup\");\r\n\r\nconst addButton = document.querySelector(\".profile__add-button\");\r\nconst editButton = document.querySelector(\".profile__edit-button\");\r\nconst formEditButton = editPopup.querySelector(\".popup__button\");\r\nconst avatar = document.querySelector(\".profile__image\");\r\nconst changeAvatarButton = changeAvatarPopup.querySelector(\".popup__button\");\r\nconst createCardButton = addCardPopup.querySelector(\".popup__button\");\r\nconst confirmDeleteButton =\r\n  confirmDeleteCardPopup.querySelector(\".popup__button\");\r\n\r\nconst changeAvatarForm = document.forms[\"avatar\"];\r\nconst avatarLinkInput = changeAvatarForm.elements[\"avatar-link\"];\r\nconst editProfileForm = document.forms[\"edit-profile\"];\r\nconst newPlaceForm = document.forms[\"new-place\"];\r\nconst confirmDeleteForm = document.forms[\"delete-form\"];\r\nconst placeNameInput = newPlaceForm.elements[\"place-name\"];\r\nconst linkInput = newPlaceForm.elements[\"link\"];\r\nconst nameInput = editProfileForm.elements[\"name\"];\r\nconst descriptionInput = editProfileForm.elements[\"about\"];\r\n\r\nconst profileTitle = document.querySelector(\".profile__title\");\r\nconst profileDescription = document.querySelector(\".profile__description\");\r\nlet cardElementToDelete;\r\n\r\nwindow.validationConfig = {\r\n  formSelector: \".popup__form\",\r\n  inputSelector: \".popup__input\",\r\n  submitButtonSelector: \".popup__button\",\r\n  inactiveButtonClass: \"button_inactive\",\r\n  inputErrorClass: \"popup__input_type_error\",\r\n  errorClass: \"form__input-error_active\",\r\n};\r\n\r\nconfirmDeleteForm.addEventListener(\"submit\", (event) => {\r\n  event.preventDefault();\r\n  if (cardElementToDelete) {\r\n    confirmDeleteButton.textContent = \"Удаляем...\";\r\n    const cardId = cardElementToDelete.dataset.id;\r\n    api\r\n      .deleteCard(cardId)\r\n      .then(() => {\r\n        cardElementToDelete.remove();\r\n        cardElementToDelete = null;\r\n        confirmDeleteCardPopup.classList.remove(\"popup_is-opened\");\r\n      })\r\n      .catch((err) => console.error(\"Ошибка при удалении карточки:\", err))\r\n      .finally(() => {\r\n        confirmDeleteButton.textContent = \"Да\";\r\n      });\r\n  }\r\n});\r\n\r\nfunction handleDelete(cardElement) {\r\n  cardElementToDelete = cardElement;\r\n  openModal(confirmDeleteCardPopup);\r\n}\r\n\r\napi\r\n  .loadUserDataAndCards()\r\n  .then(({ userInfo, cards }) => {\r\n    avatar.style.backgroundImage = `url(${userInfo.avatar})`;\r\n\r\n    updateProfile({ name: userInfo.name, about: userInfo.about });\r\n\r\n    cards.forEach((card) => {\r\n      const cardElement = createCard(\r\n        card,\r\n        handleLikeButtonClick,\r\n        handleDelete,\r\n        createCardPopup,\r\n        userInfo._id\r\n      );\r\n      renderCard(cardElement);\r\n    });\r\n  })\r\n  .catch((err) => {\r\n    console.error(\"Ошибка при загрузке карточек:\", err);\r\n  });\r\n\r\nchangeAvatarForm.addEventListener(\"submit\", (event) => {\r\n  event.preventDefault();\r\n  changeAvatarButton.textContent = \"Сохраняем...\";\r\n  const newAvatarLink = avatarLinkInput.value;\r\n  api\r\n    .updateUserAvatar(newAvatarLink)\r\n    .then(() => {\r\n      avatar.style.backgroundImage = `url(${newAvatarLink})`;\r\n      closeModal(changeAvatarPopup);\r\n    })\r\n    .catch((err) => {\r\n      console.error(\"Ошибка при обновлении аватара:\", err);\r\n    })\r\n    .finally(() => {\r\n      changeAvatarButton.textContent = \"Сохранить\";\r\n    });\r\n});\r\n\r\navatar.addEventListener(\"click\", () => {\r\n  avatarLinkInput.value = \"\";\r\n  clearValidation(changeAvatarForm, validationConfig);\r\n  openModal(changeAvatarPopup);\r\n});\r\n\r\nenableValidation(validationConfig);\r\n\r\nmodals.forEach((modal) => {\r\n  modal.classList.add(\"popup_is-animated\");\r\n  modal.addEventListener(\"click\", handleModalClose);\r\n});\r\n\r\nfunction createCardPopup(imageSrc, title) {\r\n  popupImage.src = imageSrc;\r\n  popupImage.alt = title;\r\n  popupCaption.textContent = title;\r\n  openModal(cardPopup);\r\n}\r\n\r\nfunction renderCard(cardElement) {\r\n  placesContainer.appendChild(cardElement);\r\n}\r\n\r\naddButton.addEventListener(\"click\", () => {\r\n  newPlaceForm.reset();\r\n  clearValidation(newPlaceForm, validationConfig);\r\n  openModal(addCardPopup);\r\n});\r\n\r\nnewPlaceForm.addEventListener(\"submit\", (event) => {\r\n  event.preventDefault();\r\n  createCardButton.textContent = \"Сохраняем...\";\r\n  const newCard = {\r\n    name: placeNameInput.value,\r\n    link: linkInput.value,\r\n  };\r\n\r\n  api\r\n    .addCard(newCard.name, newCard.link)\r\n    .then((card) => {\r\n      const cardElement = createCard(\r\n        card,\r\n        handleLikeButtonClick,\r\n        handleDelete,\r\n        createCardPopup,\r\n        card.owner._id\r\n      );\r\n      placesContainer.prepend(cardElement);\r\n      closeModal(addCardPopup);\r\n      newPlaceForm.reset();\r\n    })\r\n    .catch((err) => {\r\n      console.error(\"Ошибка при добавлении карточки:\", err);\r\n    })\r\n    .finally(() => {\r\n      createCardButton.textContent = \"Сохранить\";\r\n    });\r\n});\r\n\r\neditButton.addEventListener(\"click\", () => {\r\n  nameInput.value = profileTitle.textContent;\r\n  descriptionInput.value = profileDescription.textContent;\r\n  clearValidation(editProfileForm, validationConfig);\r\n  openModal(editPopup);\r\n});\r\n\r\nfunction updateProfile({ name, about }) {\r\n  profileTitle.textContent = name;\r\n  profileDescription.textContent = about;\r\n}\r\n\r\neditProfileForm.addEventListener(\"submit\", (event) => {\r\n  event.preventDefault();\r\n  formEditButton.textContent = \"Сохраняем...\";\r\n\r\n  const updatedProfile = {\r\n    name: nameInput.value,\r\n    about: descriptionInput.value,\r\n  };\r\n\r\n  api\r\n    .updateUserInfo(updatedProfile.name, updatedProfile.about)\r\n    .then(() => {\r\n      updateProfile(updatedProfile);\r\n      closeModal(editPopup);\r\n      editProfileForm.reset();\r\n    })\r\n    .catch((err) => {\r\n      console.error(\"Ошибка при обновлении профиля:\", err);\r\n    })\r\n    .finally(() => {\r\n      formEditButton.textContent = \"Сохранить\";\r\n    });\r\n});"],"names":["baseUrl","concat","request","path","body","arguments","length","undefined","options","_objectSpread","method","headers","authorization","JSON","stringify","fetch","then","res","ok","json","err","error","Error","status","details","createCard","data","handleLike","handleDelete","handleImageClick","userId","cardElement","document","getElementById","content","querySelector","cloneNode","imgElement","titleElement","deleteButton","likeElement","likeCount","textContent","likes","src","link","alt","name","dataset","id","_id","some","like","classList","add","owner","style","display","addEventListener","event","handleLikeButtonClick","cardId","target","closest","contains","api","updatedCard","remove","catch","console","openModal","modal","handleEscapeKey","closeModal","removeEventListener","key","querySelectorAll","forEach","popup","handleModalClose","toggleInputError","formElement","inputElement","errorMessage","errorElement","validationConfig","inputErrorClass","errorClass","hideInputError","toggleButtonState","inputList","buttonElement","validity","valid","hasInvalidInput","inactiveButtonClass","removeAttribute","setAttribute","clearValidation","Array","from","inputSelector","cardElementToDelete","placesContainer","addCardPopup","editPopup","changeAvatarPopup","cardPopup","confirmDeleteCardPopup","popupImage","popupCaption","modals","addButton","editButton","formEditButton","avatar","changeAvatarButton","createCardButton","confirmDeleteButton","changeAvatarForm","forms","avatarLinkInput","elements","editProfileForm","newPlaceForm","confirmDeleteForm","placeNameInput","linkInput","nameInput","descriptionInput","profileTitle","profileDescription","createCardPopup","imageSrc","title","updateProfile","_ref2","about","window","formSelector","submitButtonSelector","preventDefault","finally","Promise","all","_ref","userInfo","cards","backgroundImage","card","appendChild","avatarLink","newAvatarLink","value","patternMismatch","setCustomValidity","pattern","RegExp","test","showInputError","validationMessage","checkInputValidity","setEventListeners","reset","newCard","prepend","updatedProfile"],"sourceRoot":""}